-- Data Tables
create table `components` (
	`Official Symbol` text primary key,
	`Gene ID` integer,
	`Protein name` text,
	`Swiss-Prot ID` text,
	`Synonyms` text,
	`Functional Category` text,
	`FA` text);

create table `edges` (
	`Source` text,
	`Target` text,
	`Effect` varchar(1),
	`Type` text,
	`PMID` text,
	`data_source` text);

create table `datasets` (
	`Name` text primary key,
	`prot_att` longtext,
	`prot_prot` longtext,
	`att_att` longetext);

-- Combinational Query of Edges and Components
create view `interactions` as
	select
		edges.`Source` as `Source`,
		source.`Swiss-Prot ID` as `Swiss-Prot ID_source`,
		source.`Functional Category` as `Functional Category_source`,
		source.`FA` as `FA_source`,
		edges.`Target` as `Target`,
		target.`Swiss-Prot ID` as `Swiss-Prot ID_target`,
		target.`Functional Category` as `Functional Category_target`,
		target.`FA` as `FA_target`,
		edges.`Effect` as `Effect`,
		edges.`Type` as `Type`,
		edges.`PMID` as `PMID`
	from
		edges,
		components as source,
		components as target
	where
		edges.`Source` = source.`Official Symbol`
	and edges.`Target` = target.`Official Symbol`;

-- Neighbor counts
create view `neighbors` as
	select
		c1.`Official Symbol` as `Official Symbol`,
		c1.count+c2.count as `Neighbors`
	from
		(select distinct
			`edges`.`Source` as `Official Symbol`,
			count(*) as count
		from
			`edges`
		where
			`edges`.`Source` != `edges`.`Target`
		group by
			`edges`.`Source`) as c1,
		(select distinct
			`edges`.`Target` as `Official Symbol`,
			count(*) as count
		from
			`edges`
		where
			`edges`.`Target` != `edges`.`Source`
		group by
			`edges`.`Target`) as c2
	where
		c1.`Official Symbol`=c2.`Official Symbol`;

